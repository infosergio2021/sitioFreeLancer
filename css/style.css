/* custom properties (variables de CSS)*/
:root{
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #ffc107;
    --secundario: #0087A7;
    --gris: #757575;

    /* --fuente-principal: 3.8rem; */
}

/* apply a natural box layout model to all elements, but allowing components to change */
/* comienzo de hack rems*/
html{
    font-size: 62.5%;
    box-sizing: border-box;
}*, *:before, *:after {
    box-sizing: inherit;
}


body{
    font-size: 16px;    /* 1rem = 10px */
    font-family: 'Krub', sans-serif; /*aplica a todos los elementos de nuestro sitio*/
}
/* fin de hack para rems */

/* defino unas reglas para la tipografia */
h1{
    font-size: 3.8rem;
}
h2{
    font-size: 2.8rem;
}
h3{
    font-size: 1.8rem;
}
h1,h2,h3{
    text-align: center;
}

/* CLASES PARA EL HEADER */

.titulo span{
    font-size: 2rem;

}

/* NOTA: la especifidad es como el navegador va a mostrar 
    el estilo segun su nivel de especificidad 
    ENTONCES NO IMPORTA EL ORDEN CSS VA A DECIDIR CUAL ES MAS ESPECIFICO Y LO VA A APLICAR
    EJ

        h1.titulo span
        .titulo span
        span
    
    ACA CSS VA A DECIDIR APLICAR LA PRIMERA OPCION POR QUE ES MAS ESPECIFICO
    SI BIEN LOS 3 SEÑALAN AL MISMO ELMENTO SOLO EL PRIMERO LO INDICA DE MANERA MAS ESPECIFICA
    Y POR LO TANTO APLICARA LOS ATRIBUTOS QUE ELLA POSEA POR SOBRE LOS DEMAS
    SALVO QUE UN ATRIBUTO LLEVE CON SIGO !important EN ESE CASO PREDOMINA EL QUE ATRIBUTO QUE TIENE EL important!

    */

/* CLASES PARA LA NAVEGACION*/
.navegacion-principal{
    display: flex;/*por default viene como flexdirection row*/
    /* ahora que hibilite display flex puedo usar las propiedades de flexbox*/
    flex-direction: column;/*cuando la pantalla es pequeña que esten ordenados por fila*/
}

/* quiero que desde una tablet a un tamaño mas grande(cuando sea mayor a 480px) */
@media (min-width: 480px){
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between;/*ordena los elementos hijos horizontalmente en este caso los separa entre ellos*/
    }
}

.navegacion-principal a {
    display: block;/*que el enlace ocupe todo el ancho de la fila*/
    text-align: center;/*que el texto este centrado en el espacio disponible*/

    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-size: 700;
    padding: 1rem;/*este pading le da espacio hacia adentro pero ademas ensancha un poco la barra del nav*/
}

.navegacion-principal a:hover {
    background-color: var(--primario);
    color: var(--oscuro);
}

/*CLASE PARA EL HERO (fondo de pantalla para la seccion)*/
/* PADRE (REALATIVE)*/
.hero{
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    position: relative;
    /*ACA ESTA PRESENTE EL MODELO CAJA POR ESO EL PADING AUMENTA EL TAMAÑO DE LA IMAGEN 
    LA SOLUCION ES EL SNIPPET DE PAUL IRISH
    */
}
/* HIJO (ABSOLUTE)*/
.contenido-hero{
    position: absolute;
    background-color:rgba(0, 0, 0, .7);/*anterior sintaxis*/
    background-color: rgb(0 0 0 / 70%);/*nueva sintaxis tiene menos soporte por parte de los navegadores*/
    width: 100%;
    height: 100%;
    display: flex;
    /* ALINEACION DE CONTENIDO DEL HERO */
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

/*haciendo el uso del enfoque de css de modulos*/
.contenido-hero h2 ,.contenido-hero p{
    color: var(--blanco);
}

.ubicacion{
    display: flex;
    align-items: center;
}

/*UTILIDADES*/

.contenedor{
    max-width: 120rem;/*con esto solo toma el valor definido si esta disponible sino tomara el 100% que es el maximo por default*/
    margin: 0 auto;
}

.nav-bg{
    background-color: var(--secundario);
}



/* @media (min-width:480px) {
    /*el siguiente codigo se va a ejecutar si la pantalla supera los 480px*/
    /*todo lo que se escriba entre esta llaves es el codigo css a utilizar*/
    /* body{
        background-color: red;
    } */
/* }*/